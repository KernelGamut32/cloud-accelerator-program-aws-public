AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""

Parameters:
    Subnet1:
        Type: "AWS::EC2::Subnet::Id"
        Description: "First subnet to deploy Lambda into"
    Subnet2:
        Type: "AWS::EC2::Subnet::Id"
        Description: "Second subnet to deploy Lambda into"
    SecurityGroup:
        Type: "AWS::EC2::SecurityGroup::Id"
        Description: "Security Group to deploy Lambda into"

Resources:
    LambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                - Sid: AllowAssumeRole
                  Effect: Allow
                  # Using cloud_user (from AWS sandbox in ACG)
                  Principal:
                    AWS:
                        - !Join
                            - ""
                            - - "arn:aws:iam::"
                              - !Ref AWS::AccountId
                              - ":user/cloud_user"
                    Service:
                    - lambda.amazonaws.com
                  Action:
                  - sts:AssumeRole
            ManagedPolicyArns:
            - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"

    LambdaFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            Environment: 
                Variables: 
                    DB_PASS: "pl4nt5!"
                    DB_USER: "plantshop"
                    DB_HOST: !Sub "database-1-instance-1.cqkudy00onyy.${AWS::Region}.rds.amazonaws.com"
            FunctionName: "PlantShopAPI"
            Handler: "index.handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "<bucket-name>"
                S3Key: "lambda.zip"
            MemorySize: 128
            Role: !Ref LambdaRole
            Runtime: "nodejs16.x"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            VpcConfig: 
                SubnetIds:
                  - !Ref Subnet1
                  - !Ref Subnet2 
                SecurityGroupIds: 
                  - !Ref SecurityGroup
            EphemeralStorage: 
                Size: 512

    LambdaUrl:
        Type: "AWS::Lambda::Url"
        Properties:
            TargetFunctionArn: !GetAtt LambdaFunction.Arn
            AuthType: "NONE"
            Cors: 
                AllowCredentials: false
                AllowOrigins: 
                  - "*"

Outputs:
    LambdaUrl:
        Value: !Ref LambdaUrl
        Export:
            Name: "PlantShopAPI-LambdaUrl"
